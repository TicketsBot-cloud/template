name: Build and Publish

env:
  REGISTRY: ghcr.io
  GITHUB_REPOSITORY_OWNER: ticketsbot-cloud

on:
  workflow_call:
    inputs:
      package_name:
        required: true
        type: string
      sha:
        required: true
        type: string

jobs:
  publish-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Print Go version
        run: |
          go version

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Determine image tag
        id: determine-tag
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref_type }}" == "tag" ]]; then
            TAG="${{ github.ref_name }}"
          else
            TAG="latest"
          fi
          echo "IMAGE_TAG=${TAG}" >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.GITHUB_REPOSITORY_OWNER }}/${{ inputs.package_name }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.GITHUB_REPOSITORY_OWNER }}/${{ inputs.package_name }}:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY }}/${{ env.GITHUB_REPOSITORY_OWNER }}/${{ inputs.package_name }}:${{ inputs.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Trigger deployment update
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.DEPLOYMENT_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'ticketsbot-cloud',
              repo: 'infra',
              workflow_id: 'update-deployment.yml',
              ref: 'main',
              inputs: {
                deployment_name: '${{ inputs.package_name }}',
                image_sha: '${{ inputs.sha }}'
              }
            })
